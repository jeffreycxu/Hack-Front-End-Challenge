{"ast":null,"code":"import _objectSpread from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/src/components/SearchBar.js\";\nimport React from 'react';\nimport { Button, Checkbox, Form, Input, Radio, Select, TextArea } from 'semantic-ui-react';\n\nvar formValid = function formValid(formErrors) {\n  var valid = true; // make sure everything in the form is filled!\n\n  Object.values(formErrors).forEach(function (val) {\n    val.length > 0 && (valid = false);\n  });\n  return valid;\n};\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchBar, _React$Component);\n\n  function SearchBar(props) {\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchBar).call(this, props));\n\n    _this.onFormSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.onSubmit(_this.state.term);\n    };\n\n    _this.onInputChange = function (e) {\n      e.preventDefault();\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      var formErrors = _objectSpread({}, _this.state.formErrors);\n\n      switch (name) {\n        case \"firstName\":\n          formErrors.firstName = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        case \"lastName\":\n          formErrors.lastName = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        case \"email\":\n          formErrors.email = emailRegex.test(value) ? \"\" : \"invalid email address\";\n          break;\n\n        case \"password\":\n          formErrors.password = value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.state = {\n      term: \"\",\n      firstName: null,\n      lastName: null,\n      email: null,\n      password: null,\n      formErrors: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state.term);\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.onFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Feedback\"), React.createElement(Form.Input, {\n        fluid: true,\n        placeholder: \"First name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        placeholder: \"Last name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"lastName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Last Name\",\n        type: \"text\",\n        name: \"lastName\",\n        noValidate: true,\n        onChange: this.onInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(Form.Input, {\n        fluid: true,\n        placeholder: \"john@example.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        control: TextArea,\n        placeholder: \"Message\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            term: e.target.value\n          });\n        },\n        maxLength: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.state.term.length, \"/500\"), React.createElement(\"button\", {\n        className: \"ui button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Click Here\"))));\n    }\n  }]);\n\n  return SearchBar;\n}(React.Component);\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/jeffreycxu/Documents/Development/React/hack-front-end/src/components/SearchBar.js"],"names":["React","Button","Checkbox","Form","Input","Radio","Select","TextArea","formValid","formErrors","valid","Object","values","forEach","val","length","SearchBar","props","onFormSubmit","e","preventDefault","onSubmit","state","term","onInputChange","target","name","value","firstName","lastName","email","emailRegex","test","password","console","log","setState","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Checkbox, Form, Input, Radio, Select, TextArea } from 'semantic-ui-react'\n\n\nconst formValid = formErrors => {\n  let valid = true;\n\n  // make sure everything in the form is filled!\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n\n  return valid;\n};\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      term: \"\",\n      firstName: null,\n      lastName: null,\n      email: null,\n      password: null,\n      formErrors: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\"\n      }\n    };\n  }\n  \n  onFormSubmit = e => {\n    e.preventDefault();\n    \n    this.props.onSubmit(this.state.term);\n  };\n  onInputChange = e =>{\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n      case \"firstName\":\n        formErrors.firstName =\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n        break;\n      case \"lastName\":\n        formErrors.lastName =\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n        break;\n      case \"email\":\n        formErrors.email = emailRegex.test(value)\n          ? \"\"\n          : \"invalid email address\";\n        break;\n      case \"password\":\n        formErrors.password =\n          value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    console.log(this.state.term);\n    return (\n      <div className = \"container\">\n        <Form onSubmit = {this.onFormSubmit}>\n          <div className=\"ui segment\">\n            <p className = \"title\">Feedback</p>\n            <Form.Input fluid placeholder='First name'/>\n            <Form.Input fluid placeholder='Last name'/>\n            <div className=\"lastName\">\n              <input\n                placeholder=\"Last Name\"\n                type=\"text\"\n                name=\"lastName\"\n                noValidate\n                onChange={this.onInputChange}\n              />\n            </div>\n            <Form.Input fluid placeholder='john@example.com'/>\n            <Form.Field control={TextArea} placeholder='Message'  onChange={e => this.setState({term: e.target.value})} maxLength={500} />\n            <p>{this.state.term.length}/500</p>\n            <button className=\"ui button\">Click Here</button>\n          </div>\n        </Form>\n      \n      </div>\n    );\n  }\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}