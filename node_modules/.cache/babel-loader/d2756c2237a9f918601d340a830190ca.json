{"ast":null,"code":"import _defineProperty from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/src/components/SearchBar.js\";\nimport React from 'react';\nimport { Form, TextArea, Message } from 'semantic-ui-react'; //email: https://www.mailboxvalidator.com/resources/articles/acceptable-email-address-syntax-rfc/\n\nvar checkValid = function checkValid(formInputs) {\n  var valid = true; // make sure everything in the form is filled!\n\n  Object.values(formInputs).forEach(function (val) {\n    if (val === null || val.length === 0) {\n      valid = false;\n    }\n  });\n  return valid;\n};\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchBar, _React$Component);\n\n  function SearchBar(props) {\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchBar).call(this, props));\n\n    _this.onFormSubmit = function (e) {\n      e.preventDefault();\n\n      if (checkValid(_this.state)) {\n        _this.setState({\n          correct: 1\n        }); //1 represents it submitted it correctly!\n\n\n        _this.props.onSubmit(_this.state);\n      } else {\n        _this.setState({\n          correct: 2\n        }); //2 represents it didn't submit correctly!\n\n      }\n    };\n\n    _this.onInputChange = function (e) {\n      e.preventDefault();\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.state = {\n      firstName: null,\n      lastName: null,\n      email: null,\n      message: \"\",\n      correct: 0 //0 represents the mull stage\n\n    };\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.state);\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.onFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Feedback\"), React.createElement(Form.Input, {\n        name: \"firstName\",\n        fluid: true,\n        placeholder: \"First name\",\n        onChange: this.onInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        name: \"lastName\",\n        fluid: true,\n        placeholder: \"Last name\",\n        onChange: this.onInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        name: \"email\",\n        fluid: true,\n        placeholder: \"john@example.com\",\n        onChange: this.onInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        name: \"message\",\n        control: TextArea,\n        placeholder: \"Message\",\n        onChange: this.onInputChange,\n        maxLength: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.state.message.length, \"/500\"), React.createElement(\"button\", {\n        className: \"ui button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Click Here\"), this.state.correct === 2 && React.createElement(Message, {\n        warning: true,\n        header: \"Form did not submit!\",\n        content: \"Make sure to check that all the inputs are filled and that the email is formatted correctly! \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), this.state.correct === 1 && React.createElement(Message, {\n        success: true,\n        header: \"Form submitted successfully!\",\n        content: \"All the info was submitted to the database correctly! Good job! \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return SearchBar;\n}(React.Component);\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/jeffreycxu/Documents/Development/React/hack-front-end/src/components/SearchBar.js"],"names":["React","Form","TextArea","Message","checkValid","formInputs","valid","Object","values","forEach","val","length","SearchBar","props","onFormSubmit","e","preventDefault","state","setState","correct","onSubmit","onInputChange","name","target","value","firstName","lastName","email","message","console","log","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, TextArea, Message } from 'semantic-ui-react'\n\n//email: https://www.mailboxvalidator.com/resources/articles/acceptable-email-address-syntax-rfc/\n\nconst checkValid = formInputs => {\n  let valid = true;\n\n  // make sure everything in the form is filled!\n  Object.values(formInputs).forEach(val => {\n    if (val === null || val.length === 0){\n      valid = false;\n    }\n  });\n\n  return valid;\n};\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      firstName: null,\n      lastName: null,\n      email: null,\n      message: \"\",\n      correct: 0 //0 represents the mull stage\n    };\n  }\n  \n  onFormSubmit = e => {\n    e.preventDefault();\n    if (checkValid(this.state)) {\n      this.setState({ correct: 1 }); //1 represents it submitted it correctly!\n      this.props.onSubmit(this.state);\n    } \n    else {\n      this.setState({ correct: 2 }); //2 represents it didn't submit correctly!\n    }\n  };\n\n  onInputChange = e =>{\n    e.preventDefault();\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({[name]: value});\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <div className = \"container\">\n        <Form onSubmit = { this.onFormSubmit }>\n          <div className=\"ui segment\">\n            <p className = \"title\">Feedback</p>\n            <Form.Input name = \"firstName\" fluid placeholder='First name' onChange={this.onInputChange}/>\n            <Form.Input name = \"lastName\" fluid placeholder='Last name'onChange={this.onInputChange}/>\n            <Form.Input name = \"email\" fluid placeholder='john@example.com' onChange={this.onInputChange}/>\n            <Form.Field name = \"message\" control={TextArea} placeholder='Message'  onChange={this.onInputChange} maxLength={500} />\n            <p>{ this.state.message.length }/500</p>\n            <button className=\"ui button\">Click Here</button>\n            {this.state.correct === 2 && \n            <Message\n    warning\n    header='Form did not submit!'\n    content='Make sure to check that all the inputs are filled and that the email is formatted correctly! '\n            /> }\n            {this.state.correct === 1 && \n            <Message\n            success\n            header='Form submitted successfully!'\n            content='All the info was submitted to the database correctly! Good job! '\n          />\n            }\n\n          </div>\n        </Form>\n      \n      </div>\n    );\n  }\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}