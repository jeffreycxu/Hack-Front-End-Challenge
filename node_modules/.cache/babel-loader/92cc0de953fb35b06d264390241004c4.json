{"ast":null,"code":"import _classCallCheck from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/src/components/SearchBar.js\";\nimport React from 'react';\nimport { Button, Checkbox, Form, Input, Radio, Select, TextArea } from 'semantic-ui-react';\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchBar, _React$Component);\n\n  function SearchBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      term: ''\n    };\n\n    _this.onFormSubmit = function (event) {\n      event.preventDefault();\n\n      if (formValid(_this.state)) {\n        console.log(\"\\n        --SUBMITTING--\\n        First Name: \".concat(_this.state.firstName, \"\\n        Last Name: \").concat(_this.state.lastName, \"\\n        Email: \").concat(_this.state.email, \"\\n      \"));\n      } else {\n        console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n      }\n\n      _this.props.onSubmit(_this.state.term);\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"onInputChange\",\n    value: function onInputChange(event) {\n      console.log(this.state.term);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state.term);\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Feedback\"), React.createElement(Form.Input, {\n        fluid: true,\n        placeholder: \"First name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        placeholder: \"Last name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"lastName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Last Name\",\n        type: \"text\",\n        name: \"lastName\",\n        noValidate: true,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), formErrors.lastName.length > 0 && React.createElement(\"span\", {\n        className: \"errorMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, formErrors.lastName)), React.createElement(Form.Input, {\n        fluid: true,\n        placeholder: \"john@example.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        control: TextArea,\n        placeholder: \"Message\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            term: e.target.value\n          });\n        },\n        maxLength: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.state.term.length, \"/500\"), React.createElement(\"button\", {\n        className: \"ui button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Click Here\"))));\n    }\n  }]);\n\n  return SearchBar;\n}(React.Component);\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/jeffreycxu/Documents/Development/React/hack-front-end/src/components/SearchBar.js"],"names":["React","Button","Checkbox","Form","Input","Radio","Select","TextArea","SearchBar","state","term","onFormSubmit","event","preventDefault","formValid","console","log","firstName","lastName","email","error","props","onSubmit","handleChange","formErrors","length","e","setState","target","value","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Checkbox, Form, Input, Radio, Select, TextArea } from 'semantic-ui-react'\n\nclass SearchBar extends React.Component {\n  state = { term: '' }; //term represents the data from the text field!\n\n  onFormSubmit = event => {\n    event.preventDefault();\n    if (formValid(this.state)) {\n      console.log(`\n        --SUBMITTING--\n        First Name: ${this.state.firstName}\n        Last Name: ${this.state.lastName}\n        Email: ${this.state.email}\n      `);\n    } else {\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n    }\n    this.props.onSubmit(this.state.term);\n  };\n  onInputChange(event){\n    console.log(this.state.term);\n  }\n\n  render() {\n    console.log(this.state.term);\n    return (\n      <div className = \"container\">\n        <Form >\n          <div className=\"ui segment\">\n            <p className = \"title\">Feedback</p>\n            <Form.Input fluid placeholder='First name'/>\n            <Form.Input fluid placeholder='Last name'/>\n            <div className=\"lastName\">\n              <input\n                placeholder=\"Last Name\"\n                type=\"text\"\n                name=\"lastName\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.lastName.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.lastName}</span>\n              )}\n            </div>\n            <Form.Input fluid placeholder='john@example.com'/>\n            <Form.Field control={TextArea} placeholder='Message'  onChange={e => this.setState({term: e.target.value})} maxLength={500} />\n            <p>{this.state.term.length}/500</p>\n            <button className=\"ui button\">Click Here</button>\n          </div>\n        </Form>\n      \n      </div>\n    );\n  }\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}