{"ast":null,"code":"import _defineProperty from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jeffreycxu/Documents/Development/React/hack-front-end/src/components/SearchBar.js\";\nimport React from 'react';\nimport { Button, Checkbox, Form, Input, Radio, Select, TextArea } from 'semantic-ui-react'; //email: https://www.mailboxvalidator.com/resources/articles/acceptable-email-address-syntax-rfc/\n\nvar formValid = function formValid(formErrors) {\n  var valid = true; // make sure everything in the form is filled!\n\n  Object.values(formErrors).forEach(function (val) {\n    console.log(val);\n  });\n  return valid;\n};\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchBar, _React$Component);\n\n  function SearchBar(props) {\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchBar).call(this, props));\n\n    _this.onFormSubmit = function (e) {\n      e.preventDefault();\n\n      if (formValid(_this.state)) {\n        _this.props.onSubmit(_this.state);\n\n        console.log(\"\\n        --SUBMITTING--\\n        First Name: \".concat(_this.state.firstName, \"\\n        Last Name: \").concat(_this.state.lastName, \"\\n        Email: \").concat(_this.state.email, \"\\n        Message: \").concat(_this.state.message, \"\\n      \"));\n      } else {\n        console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n      }\n    };\n\n    _this.onInputChange = function (e) {\n      e.preventDefault();\n      var name = e.target.name;\n      var value = e.target.value;\n\n      var formErrors = _objectSpread({}, _this.state.formErrors);\n\n      switch (name) {\n        case \"firstName\":\n          formErrors.firstName = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        case \"lastName\":\n          formErrors.lastName = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        case \"message\":\n          formErrors.message = value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      console.log(formErrors);\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.state = {\n      firstName: null,\n      lastName: null,\n      email: null,\n      message: \"\",\n      formErrors: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        message: \"\"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.state);\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.onFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Feedback\"), React.createElement(Form.Input, {\n        name: \"firstName\",\n        fluid: true,\n        placeholder: \"First name\",\n        onChange: this.onInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        name: \"lastName\",\n        fluid: true,\n        placeholder: \"Last name\",\n        onChange: this.onInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        name: \"email\",\n        fluid: true,\n        placeholder: \"john@example.com\",\n        onChange: this.onInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        name: \"message\",\n        control: TextArea,\n        placeholder: \"Message\",\n        onChange: this.onInputChange,\n        maxLength: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.state.message.length, \"/500\"), React.createElement(\"button\", {\n        className: \"ui button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Click Here\"))));\n    }\n  }]);\n\n  return SearchBar;\n}(React.Component);\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/jeffreycxu/Documents/Development/React/hack-front-end/src/components/SearchBar.js"],"names":["React","Button","Checkbox","Form","Input","Radio","Select","TextArea","formValid","formErrors","valid","Object","values","forEach","val","console","log","SearchBar","props","onFormSubmit","e","preventDefault","state","onSubmit","firstName","lastName","email","message","error","onInputChange","name","target","value","length","setState","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Checkbox, Form, Input, Radio, Select, TextArea } from 'semantic-ui-react'\n\n//email: https://www.mailboxvalidator.com/resources/articles/acceptable-email-address-syntax-rfc/\n\nconst formValid = formErrors => {\n  let valid = true;\n\n  // make sure everything in the form is filled!\n  Object.values(formErrors).forEach(val => {\n    console.log(val);\n  });\n\n\n  return valid;\n};\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      firstName: null,\n      lastName: null,\n      email: null,\n      message: \"\",\n      formErrors: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        message: \"\"\n      }\n    };\n  }\n  \n  onFormSubmit = e => {\n    e.preventDefault();\n    if (formValid(this.state)) {\n      this.props.onSubmit(this.state);\n      console.log(`\n        --SUBMITTING--\n        First Name: ${this.state.firstName}\n        Last Name: ${this.state.lastName}\n        Email: ${this.state.email}\n        Message: ${this.state.message}\n      `);\n    } else {\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n    }\n  };\n\n  onInputChange = e =>{\n    e.preventDefault();\n    const name = e.target.name;\n    const value = e.target.value;\n    let formErrors = { ...this.state.formErrors };\n    switch (name) {\n      case \"firstName\":\n        formErrors.firstName =\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n        break;\n      case \"lastName\":\n        formErrors.lastName =\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n        break;\n      case \"message\":\n        formErrors.message =\n          value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n        break;\n      default:\n        break;\n    }\n    console.log(formErrors);\n    this.setState({[name]: value});\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <div className = \"container\">\n        <Form onSubmit = {this.onFormSubmit}>\n          <div className=\"ui segment\">\n            <p className = \"title\">Feedback</p>\n            <Form.Input name = \"firstName\" fluid placeholder='First name' onChange={this.onInputChange}/>\n            <Form.Input name = \"lastName\" fluid placeholder='Last name'onChange={this.onInputChange}/>\n            <Form.Input name = \"email\" fluid placeholder='john@example.com' onChange={this.onInputChange}/>\n            <Form.Field name = \"message\" control={TextArea} placeholder='Message'  onChange={this.onInputChange} maxLength={500} />\n            <p>{this.state.message.length}/500</p>\n            <button className=\"ui button\">Click Here</button>\n          </div>\n        </Form>\n      \n      </div>\n    );\n  }\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}